# README
#
## prereq
# - `sudo apt install podman-plugins`(or podman-dnsname if that does not work)
#
## run(dev)
# - `podman-compose down --timeout 1 && podman-compose up --force-recreate`
# - CHECK:
#   - `podman exec -it interstellar-book_api_circuits_1 /bin/bash`
#   - `apt-get update && apt-get install -y curl && curl -v http://ipfs:5001/version`

version: '3'
services:
  # TODO? Launch a generic Substrate Front-end

  # cf https://docs.ipfs.io/how-to/run-ipfs-inside-docker/
  # docker run -d --name ipfs_host -v $ipfs_staging:/export -v $ipfs_data:/data/ipfs -p 4001:4001 -p 4001:4001/udp -p 127.0.0.1:8080:8080 -p 127.0.0.1:5001:5001 ipfs/go-ipfs:latest
  # LOCAL:
  # IPFS_PATH=/tmp/ipfs $GO_IPFS_PATH init -p test
  # IPFS_PATH=/tmp/ipfs $GO_IPFS_PATH config Addresses.API /ip4/0.0.0.0/tcp/5001
  # TODO? IPFS_PATH=/tmp/ipfs $GO_IPFS_PATH daemon --enable-pubsub-experiment
  ipfs:
    image: "ipfs/go-ipfs:latest"
    ports:
      - "4001:4001"
      - "4001:4001/udp"
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:5001:5001"
    environment:
      # TODO(prod) use "server"?
      IPFS_PROFILE: test

  # docker run -it --name api_garble --rm -p 3001:3000 --env RUST_LOG="warn,info,debug" ghcr.io/interstellar-network/api_garble:milestone2 /usr/local/bin/api_garble --ipfs-server-multiaddr /ip4/172.17.0.1/tcp/5001
  api_garble:
    # TODO use tag eg "milestone3"
    image: "ghcr.io/interstellar-network/api_garble:milestone3"
    # MUST set a different port than "api_circuits" else it starts correctly but "ocw" can not connect to it??
    command: ["/usr/local/bin/api_garble", "--bind-addr-port=0.0.0.0:3001"]
    ports:
      - "3001:3001"
    environment:
      RUST_LOG: warn,info,debug
      RUST_BACKTRACE: 1
      IPFS_SERVER_MULTIADDR: /dns/ipfs/tcp/5001

  # docker run -it --name api_circuits --rm -p 3000:3000 --env RUST_LOG="warn,info,debug" ghcr.io/interstellar-network/api_circuits:milestone2 /usr/local/bin/api_circuits --ipfs-server-multiaddr /ip4/172.17.0.1/tcp/5001
  api_circuits:
    # TODO use tag eg "milestone3"
    image: "ghcr.io/interstellar-network/api_circuits:milestone3"
    ports:
      - "3000:3000"
    environment:
      RUST_LOG: warn,info,debug
      RUST_BACKTRACE: 1
      IPFS_SERVER_MULTIADDR: /dns/ipfs/tcp/5001

  ocw:
    # TODO use tag eg "milestone3"
    image: "ghcr.io/interstellar-network/ocw_demo:milestone3"
    hostname: ocw_demo
    ports:
      - "9944:9944"
    environment:
      RUST_LOG: warn,info
      RUST_BACKTRACE: 1
      INTERSTELLAR_URI_ROOT_API_CIRCUITS: http://api_circuits:3000
      INTERSTELLAR_URI_ROOT_API_GARBLE: http://api_garble:3001
